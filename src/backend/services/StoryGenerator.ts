// src/backend/services/StoryGenerator.ts

import { AIModelFactory, AIModelType } from './AIModelFactory';
import { AIModelParams } from './AIModelInterface';

export class StoryGenerator {
  private aiModel;

  constructor(modelType: AIModelType = AIModelType.OLLAMA) {
    console.log(`Initializing StoryGenerator with model type: ${modelType}`);
    this.aiModel = AIModelFactory.createModel(modelType);
  }

  async generateStory(prompt: string): Promise<string> {
    console.log(`Generating story with prompt: ${prompt}`);
    const params: AIModelParams = {
      prompt: `Generate a short story for children based on the following prompt: ${prompt}`,
      max_tokens: 500,
      temperature: 0.7
    };

    try {
      console.log('Sending request to AI model');
      const response = await this.aiModel.generateText(params);
      console.log('Received response from AI model:', response);
      
      if (!response.text) {
        throw new Error('No text generated by the AI model');
      }
      
      return response.text.trim();
    } catch (error: unknown) {
      console.error('Error in StoryGenerator:', error);
      if (error instanceof Error) {
        throw new Error(`Failed to generate story: ${error.message}`);
      } else {
        throw new Error('Failed to generate story: An unknown error occurred');
      }
    }
  }
}
